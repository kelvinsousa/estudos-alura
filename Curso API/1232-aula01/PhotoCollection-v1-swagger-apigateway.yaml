---
swagger: "2.0"
info:
  version: "2019-04-17T18:59:57Z"
  title: "PhotoCollection"
host: "z7h1dazk02.execute-api.us-east-1.amazonaws.com"
basePath: "/v1"
schemes:
- "https"
paths:
  /bucket/{item}:
    post:
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - name: "item"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::366781128256:role/photocollection-role"
        httpMethod: "PUT"
        uri: "arn:aws:apigateway:us-east-1:s3:path/api-photocollection/{item}"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "{\"messagem\":\"Envio com sucesso\"}"
        requestParameters:
          integration.request.path.item: "method.request.path.item"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_BINARY"
        type: "aws"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "item"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::366781128256:role/photocollection-role"
        httpMethod: "DELETE"
        uri: "arn:aws:apigateway:us-east-1:s3:path/api-photocollection/{item}"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "{\"messagem\":\"Deletado com sucesso\"}"
        requestParameters:
          integration.request.path.item: "method.request.path.item"
        passthroughBehavior: "when_no_match"
        type: "aws"
  /photo:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "text/html"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Content-type:
              type: "string"
            Content-Type:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Content-Type: "'text/html'"
              method.response.header.Content-type: "'text/html'"
            responseTemplates:
              text/html: "<html>\r\n    <head>\r\n        <style>\r\n        body\
                \ {\r\n            color: #333;\r\n            font-family: Sans-serif;\r\
                \n            max-width: 800px;\r\n            margin: auto;\r\n \
                \       }\r\n        </style>\r\n    </head>\r\n    <body>\r\n   \
                \     <h1>Photo Collection API</h1>\r\n        <p>\r\n           \
                \ A API Photo Collection contem os seguintes recursos:\r\n       \
                \ </p>\r\n        <p>    \r\n            Consulta pelo ID da photo.\
                \ Metodo <code>GET</code> <code>/photo/{id}</code>\r\n        </p>\r\
                \n        <pre>\r\n            Exemplo:\r\n            <code>photo/1</code>\r\
                \n        </pre> \r\n        <p> \r\n            Consulta pelo ASSUNTO\
                \ da photo. Metodo <code>GET</code> <code>/photo/assunto</code>\r\n\
                \        </p>\r\n        <pre>\r\n            Exemplo:\r\n       \
                \     <code>photo/assunto?nome=batman</code>\r\n        </pre> \r\n\
                \        <p>\r\n            Consulta por ASSUNTO e COLECAO. Metodo\
                \ <code>GET</code> <code>/photo/consulta</code>\r\n        </p>\r\n\
                \        <pre>\r\n            Exemplo:\r\n            <code>/photo/consulta?assunto=batman&colecao=dc</code>\
                \ \r\n        </pre>\r\n    </body>\r\n</html>"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_templates"
        type: "mock"
  /photo/assunto:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::366781128256:role/photocollection-role"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:dynamodb:action/Scan"
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\r\n \"TableName\" : \"api-photo-collection\",\r\n \"\
            ProjectionExpression\" : \"id, descricao, colecao\",\r\n \"FilterExpression\"\
            \ : \"assunto = :v1\",\r\n \"ExpressionAttributeValues\" :  {\r\n   \"\
            :v1\" : { \"S\" : \"$input.params('nome')\" }\r\n }\r\n}"
        passthroughBehavior: "when_no_match"
        type: "aws"
  /photo/consulta:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::366781128256:role/photocollection-role"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:dynamodb:action/Scan"
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: " {\r\n  \"TableName\" : \"api-photo-collection\",\r\n\
            \  \"FilterExpression\" :\"assunto = :v1 AND colecao = :v2\",\r\n  \"\
            ExpressionAttributeValues\" :  {\r\n    \":v1\" : { \"S\" : \"$input.params('assunto')\"\
            \ },\r\n    \":v2\" : { \"S\" : \"$input.params('colecao')\" }\r\n\r\n\
            \  }\r\n }"
        passthroughBehavior: "when_no_templates"
        type: "aws"
  /photo/{id}:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::366781128256:role/photocollection-role"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:dynamodb:action/Scan"
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{ \r\n    \"TableName\" : \"api-photo-collection\", \r\
            \n    \"FilterExpression\" : \"id = :v1\",\r\n    \"ExpressionAttributeValues\"\
            \ :  {\r\n      \":v1\" : { \"N\" : \"$input.params('id')\" }\r\n    }\r\
            \n  }"
        passthroughBehavior: "when_no_templates"
        type: "aws"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
x-amazon-apigateway-binary-media-types:
- "image/jpeg"
